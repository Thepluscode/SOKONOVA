
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  sellerHandle: 'sellerHandle',
  shopName: 'shopName',
  shopLogoUrl: 'shopLogoUrl',
  shopBannerUrl: 'shopBannerUrl',
  shopBio: 'shopBio',
  country: 'country',
  city: 'city',
  ratingAvg: 'ratingAvg',
  ratingCount: 'ratingCount',
  phone: 'phone',
  timezone: 'timezone',
  notifyEmail: 'notifyEmail',
  notifySms: 'notifySms',
  notifyPush: 'notifyPush',
  digestWeekly: 'digestWeekly',
  quietHoursStart: 'quietHoursStart',
  quietHoursEnd: 'quietHoursEnd',
  pushSubscription: 'pushSubscription'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  sellerId: 'sellerId',
  title: 'title',
  description: 'description',
  price: 'price',
  currency: 'currency',
  imageUrl: 'imageUrl',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  category: 'category'
};

exports.Prisma.InventoryScalarFieldEnum = {
  id: 'id',
  productId: 'productId',
  quantity: 'quantity',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  anonKey: 'anonKey',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  qty: 'qty',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  total: 'total',
  currency: 'currency',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  paymentRef: 'paymentRef',
  shippingAdr: 'shippingAdr'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  qty: 'qty',
  price: 'price',
  sellerId: 'sellerId',
  grossAmount: 'grossAmount',
  feeAmount: 'feeAmount',
  netAmount: 'netAmount',
  payoutStatus: 'payoutStatus',
  payoutBatchId: 'payoutBatchId',
  paidAt: 'paidAt',
  currency: 'currency',
  fulfillmentStatus: 'fulfillmentStatus',
  shippedAt: 'shippedAt',
  deliveredAt: 'deliveredAt',
  trackingCode: 'trackingCode',
  carrier: 'carrier',
  deliveryProofUrl: 'deliveryProofUrl',
  notes: 'notes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  provider: 'provider',
  externalRef: 'externalRef',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SellerApplicationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  businessName: 'businessName',
  phone: 'phone',
  country: 'country',
  city: 'city',
  storefrontDesc: 'storefrontDesc',
  status: 'status',
  adminNote: 'adminNote',
  reviewedAt: 'reviewedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DisputeScalarFieldEnum = {
  id: 'id',
  orderItemId: 'orderItemId',
  buyerId: 'buyerId',
  reasonCode: 'reasonCode',
  description: 'description',
  photoProofUrl: 'photoProofUrl',
  status: 'status',
  resolutionNote: 'resolutionNote',
  resolvedById: 'resolvedById',
  resolvedAt: 'resolvedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  orderItemId: 'orderItemId',
  sellerId: 'sellerId',
  buyerId: 'buyerId',
  rating: 'rating',
  comment: 'comment',
  isVisible: 'isVisible',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  title: 'title',
  body: 'body',
  data: 'data',
  readAt: 'readAt',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  BUYER: 'BUYER',
  SELLER: 'SELLER',
  ADMIN: 'ADMIN'
};

exports.OrderStatus = exports.$Enums.OrderStatus = {
  PENDING: 'PENDING',
  PAID: 'PAID',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  INITIATED: 'INITIATED',
  SUCCEEDED: 'SUCCEEDED',
  FAILED: 'FAILED'
};

exports.PayoutStatus = exports.$Enums.PayoutStatus = {
  PENDING: 'PENDING',
  PAID_OUT: 'PAID_OUT'
};

exports.FulfillmentStatus = exports.$Enums.FulfillmentStatus = {
  PACKED: 'PACKED',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  ISSUE: 'ISSUE'
};

exports.ApplicationStatus = exports.$Enums.ApplicationStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.DisputeReason = exports.$Enums.DisputeReason = {
  NOT_DELIVERED: 'NOT_DELIVERED',
  DAMAGED: 'DAMAGED',
  COUNTERFEIT: 'COUNTERFEIT',
  WRONG_ITEM: 'WRONG_ITEM',
  OTHER: 'OTHER'
};

exports.DisputeStatus = exports.$Enums.DisputeStatus = {
  OPEN: 'OPEN',
  SELLER_RESPONDED: 'SELLER_RESPONDED',
  RESOLVED_BUYER_COMPENSATED: 'RESOLVED_BUYER_COMPENSATED',
  RESOLVED_REDELIVERED: 'RESOLVED_REDELIVERED',
  REJECTED: 'REJECTED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Product: 'Product',
  Inventory: 'Inventory',
  Cart: 'Cart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  Payment: 'Payment',
  SellerApplication: 'SellerApplication',
  Dispute: 'Dispute',
  Review: 'Review',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/theophilusogieva/Downloads/sokonova-frontend/backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/theophilusogieva/Downloads/sokonova-frontend/backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        String   @id @default(cuid())\n  email     String   @unique\n  name      String?\n  role      Role     @default(BUYER)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Seller storefront fields\n  sellerHandle  String? @unique // \"mama-ade-fashion\"\n  shopName      String?\n  shopLogoUrl   String?\n  shopBannerUrl String?\n  shopBio       String? // short pitch\n  country       String?\n  city          String?\n\n  // basic reputation / trust signal\n  ratingAvg   Float? @default(0)\n  ratingCount Int?   @default(0)\n\n  // Notification preferences\n  phone            String?\n  timezone         String? @default(\"Africa/Lagos\")\n  notifyEmail      Boolean @default(true)\n  notifySms        Boolean @default(false)\n  notifyPush       Boolean @default(true)\n  digestWeekly     Boolean @default(true)\n  quietHoursStart  Int? // 0-23 local hour\n  quietHoursEnd    Int? // 0-23 local hour\n  pushSubscription Json? // Web Push subscription object\n\n  carts             Cart[]\n  orders            Order[]\n  products          Product[]          @relation(\"SellerProducts\")\n  sellerApplication SellerApplication?\n  disputes          Dispute[]\n  reviewsGiven      Review[]           @relation(\"BuyerReviews\")\n  reviewsReceived   Review[]           @relation(\"SellerReviews\")\n  notifications     Notification[]\n}\n\nenum Role {\n  BUYER\n  SELLER\n  ADMIN\n}\n\nmodel Product {\n  id          String   @id @default(cuid())\n  seller      User     @relation(\"SellerProducts\", fields: [sellerId], references: [id])\n  sellerId    String\n  title       String\n  description String\n  price       Decimal  @db.Decimal(12, 2)\n  currency    String   @default(\"USD\")\n  imageUrl    String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Discovery\n  category String? // e.g. \"fashion\", \"beauty\", \"home\", \"electronics\"\n\n  cartItems  CartItem[]\n  orderItems OrderItem[]\n  inventory  Inventory?\n}\n\nmodel Inventory {\n  id        String   @id @default(cuid())\n  product   Product  @relation(fields: [productId], references: [id])\n  productId String   @unique\n  quantity  Int\n  updatedAt DateTime @updatedAt\n}\n\nmodel Cart {\n  id        String     @id @default(cuid())\n  user      User?      @relation(fields: [userId], references: [id])\n  userId    String?\n  anonKey   String?    @unique\n  items     CartItem[]\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n}\n\nmodel CartItem {\n  id        String   @id @default(cuid())\n  cart      Cart     @relation(fields: [cartId], references: [id])\n  cartId    String\n  product   Product  @relation(fields: [productId], references: [id])\n  productId String\n  qty       Int      @default(1)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Order {\n  id          String      @id @default(cuid())\n  user        User        @relation(fields: [userId], references: [id])\n  userId      String\n  total       Decimal     @db.Decimal(12, 2)\n  currency    String      @default(\"USD\")\n  status      OrderStatus @default(PENDING)\n  createdAt   DateTime    @default(now())\n  updatedAt   DateTime    @updatedAt\n  items       OrderItem[]\n  paymentRef  String?\n  shippingAdr String?\n  payment     Payment?\n}\n\nmodel OrderItem {\n  id        String  @id @default(cuid())\n  order     Order   @relation(fields: [orderId], references: [id])\n  orderId   String\n  product   Product @relation(fields: [productId], references: [id])\n  productId String\n  qty       Int\n  price     Decimal @db.Decimal(12, 2)\n\n  // --- SELLER EARNINGS & PAYOUT TRACKING ---\n  sellerId      String // denormalized from product.sellerId at purchase time\n  grossAmount   Decimal      @db.Decimal(12, 2) // price * qty (snapshot at order time)\n  feeAmount     Decimal      @db.Decimal(12, 2) // SokoNova marketplace commission\n  netAmount     Decimal      @db.Decimal(12, 2) // grossAmount - feeAmount (what seller receives)\n  payoutStatus  PayoutStatus @default(PENDING)\n  payoutBatchId String? // group payouts into batches for reconciliation\n  paidAt        DateTime? // timestamp when seller was paid\n  currency      String       @default(\"USD\")\n\n  // --- FULFILLMENT & SHIPPING TRACKING ---\n  fulfillmentStatus FulfillmentStatus @default(PACKED)\n  shippedAt         DateTime?\n  deliveredAt       DateTime?\n  trackingCode      String? // tracking number from carrier\n  carrier           String? // DHL, FedEx, UPS, local courier\n  deliveryProofUrl  String? // photo of package, signature, receipt\n  notes             String? // seller note to buyer (e.g. \"left with receptionist\")\n\n  // --- DISPUTES ---\n  disputes Dispute[]\n\n  // --- REVIEWS ---\n  reviews Review[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Payment {\n  id          String        @id @default(cuid())\n  order       Order         @relation(fields: [orderId], references: [id])\n  orderId     String        @unique\n  provider    String // \"flutterwave\" | \"paystack\" | \"stripe\"\n  externalRef String? // PSP transaction / checkout ref\n  amount      Decimal       @db.Decimal(12, 2)\n  currency    String\n  status      PaymentStatus @default(INITIATED)\n  createdAt   DateTime      @default(now())\n  updatedAt   DateTime      @updatedAt\n}\n\nenum OrderStatus {\n  PENDING\n  PAID\n  SHIPPED\n  DELIVERED\n  CANCELLED\n}\n\nenum PaymentStatus {\n  INITIATED\n  SUCCEEDED\n  FAILED\n}\n\nenum PayoutStatus {\n  PENDING\n  PAID_OUT\n}\n\nenum FulfillmentStatus {\n  PACKED // Seller prepared item, ready to ship\n  SHIPPED // Handed off to carrier with tracking\n  DELIVERED // Buyer received / confirmed delivery\n  ISSUE // Dispute, lost, damaged, or other problem\n}\n\nmodel SellerApplication {\n  id     String @id @default(cuid())\n  user   User   @relation(fields: [userId], references: [id])\n  userId String @unique\n\n  businessName   String\n  phone          String\n  country        String\n  city           String\n  storefrontDesc String // what they sell / category focus\n  status         ApplicationStatus @default(PENDING)\n\n  adminNote  String?\n  reviewedAt DateTime?\n  createdAt  DateTime  @default(now())\n  updatedAt  DateTime  @updatedAt\n}\n\nenum ApplicationStatus {\n  PENDING\n  APPROVED\n  REJECTED\n}\n\nmodel Dispute {\n  id          String    @id @default(cuid())\n  orderItem   OrderItem @relation(fields: [orderItemId], references: [id])\n  orderItemId String\n  buyer       User      @relation(fields: [buyerId], references: [id])\n  buyerId     String\n\n  reasonCode    DisputeReason // e.g. DAMAGED / NOT_DELIVERED / COUNTERFEIT / OTHER\n  description   String // buyer's description\n  photoProofUrl String? // optional photo/video link from buyer\n\n  status         DisputeStatus @default(OPEN)\n  resolutionNote String?\n  resolvedById   String? // admin or seller who closed it\n  resolvedAt     DateTime?\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nenum DisputeReason {\n  NOT_DELIVERED\n  DAMAGED\n  COUNTERFEIT\n  WRONG_ITEM\n  OTHER\n}\n\nenum DisputeStatus {\n  OPEN\n  SELLER_RESPONDED\n  RESOLVED_BUYER_COMPENSATED\n  RESOLVED_REDELIVERED\n  REJECTED\n}\n\nmodel Review {\n  id          String    @id @default(cuid())\n  orderItem   OrderItem @relation(fields: [orderItemId], references: [id])\n  orderItemId String\n\n  seller   User   @relation(\"SellerReviews\", fields: [sellerId], references: [id])\n  sellerId String\n\n  buyer   User   @relation(\"BuyerReviews\", fields: [buyerId], references: [id])\n  buyerId String\n\n  rating    Int // 1-5\n  comment   String\n  isVisible Boolean @default(true)\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Notification {\n  id     String @id @default(cuid())\n  user   User   @relation(fields: [userId], references: [id])\n  userId String\n\n  type  String // ORDER_PAID, ORDER_SHIPPED, ORDER_DELIVERED, DISPUTE_OPENED, DISPUTE_RESOLVED, PAYOUT_RELEASED, RISK_ALERT\n  title String\n  body  String\n  data  Json? // Additional context (orderId, disputeId, etc.)\n\n  readAt    DateTime?\n  createdAt DateTime  @default(now())\n\n  @@index([userId, createdAt])\n  @@index([userId, readAt])\n}\n",
  "inlineSchemaHash": "7234cd4f6e4e2ad82a56b3174030da9c09a92950cddce445a368d0132bfe88c9",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sellerHandle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopLogoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopBannerUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shopBio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ratingAvg\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"ratingCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notifyEmail\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notifySms\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"notifyPush\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"digestWeekly\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"quietHoursStart\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"quietHoursEnd\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"pushSubscription\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"SellerProducts\"},{\"name\":\"sellerApplication\",\"kind\":\"object\",\"type\":\"SellerApplication\",\"relationName\":\"SellerApplicationToUser\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"DisputeToUser\"},{\"name\":\"reviewsGiven\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"BuyerReviews\"},{\"name\":\"reviewsReceived\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"SellerReviews\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"}],\"dbName\":null},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerProducts\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartItems\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"inventory\",\"kind\":\"object\",\"type\":\"Inventory\",\"relationName\":\"InventoryToProduct\"}],\"dbName\":null},\"Inventory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"InventoryToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Cart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CartToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"anonKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartToCartItem\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"Cart\",\"relationName\":\"CartToCartItem\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CartItemToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"total\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"paymentRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"shippingAdr\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"OrderToPayment\"}],\"dbName\":null},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qty\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grossAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"feeAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"netAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"payoutStatus\",\"kind\":\"enum\",\"type\":\"PayoutStatus\"},{\"name\":\"payoutBatchId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paidAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fulfillmentStatus\",\"kind\":\"enum\",\"type\":\"FulfillmentStatus\"},{\"name\":\"shippedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveredAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"trackingCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"carrier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryProofUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disputes\",\"kind\":\"object\",\"type\":\"Dispute\",\"relationName\":\"DisputeToOrderItem\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"OrderItemToReview\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToPayment\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalRef\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SellerApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerApplicationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storefrontDesc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicationStatus\"},{\"name\":\"adminNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Dispute\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"DisputeToOrderItem\"},{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DisputeToUser\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reasonCode\",\"kind\":\"enum\",\"type\":\"DisputeReason\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photoProofUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DisputeStatus\"},{\"name\":\"resolutionNote\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resolvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderItem\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToReview\"},{\"name\":\"orderItemId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"seller\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SellerReviews\"},{\"name\":\"sellerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"buyer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BuyerReviews\"},{\"name\":\"buyerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isVisible\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

